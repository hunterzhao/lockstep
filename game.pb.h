// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace game {
class ActionProto;
class ActionProtoDefaultTypeInternal;
extern ActionProtoDefaultTypeInternal _ActionProto_default_instance_;
class GameReqProto;
class GameReqProtoDefaultTypeInternal;
extern GameReqProtoDefaultTypeInternal _GameReqProto_default_instance_;
class GameResProto;
class GameResProtoDefaultTypeInternal;
extern GameResProtoDefaultTypeInternal _GameResProto_default_instance_;
class Jump;
class JumpDefaultTypeInternal;
extern JumpDefaultTypeInternal _Jump_default_instance_;
class PlayerInfoProto;
class PlayerInfoProtoDefaultTypeInternal;
extern PlayerInfoProtoDefaultTypeInternal _PlayerInfoProto_default_instance_;
class UnitInfoProto;
class UnitInfoProtoDefaultTypeInternal;
extern UnitInfoProtoDefaultTypeInternal _UnitInfoProto_default_instance_;
class UnitReqProto;
class UnitReqProtoDefaultTypeInternal;
extern UnitReqProtoDefaultTypeInternal _UnitReqProto_default_instance_;
class Walk;
class WalkDefaultTypeInternal;
extern WalkDefaultTypeInternal _Walk_default_instance_;
}  // namespace game

namespace game {

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_game_2eproto

// ===================================================================

class Walk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.Walk) */ {
 public:
  Walk();
  virtual ~Walk();

  Walk(const Walk& from);

  inline Walk& operator=(const Walk& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Walk& default_instance();

  static inline const Walk* internal_default_instance() {
    return reinterpret_cast<const Walk*>(
               &_Walk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Walk* other);

  // implements Message ----------------------------------------------

  inline Walk* New() const PROTOBUF_FINAL { return New(NULL); }

  Walk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Walk& from);
  void MergeFrom(const Walk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Walk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:game.Walk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Jump : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.Jump) */ {
 public:
  Jump();
  virtual ~Jump();

  Jump(const Jump& from);

  inline Jump& operator=(const Jump& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Jump& default_instance();

  static inline const Jump* internal_default_instance() {
    return reinterpret_cast<const Jump*>(
               &_Jump_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Jump* other);

  // implements Message ----------------------------------------------

  inline Jump* New() const PROTOBUF_FINAL { return New(NULL); }

  Jump* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Jump& from);
  void MergeFrom(const Jump& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Jump* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:game.Jump)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.ActionProto) */ {
 public:
  ActionProto();
  virtual ~ActionProto();

  ActionProto(const ActionProto& from);

  inline ActionProto& operator=(const ActionProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProto& default_instance();

  static inline const ActionProto* internal_default_instance() {
    return reinterpret_cast<const ActionProto*>(
               &_ActionProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ActionProto* other);

  // implements Message ----------------------------------------------

  inline ActionProto* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProto& from);
  void MergeFrom(const ActionProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .game.Walk walkdata = 6;
  bool has_walkdata() const;
  void clear_walkdata();
  static const int kWalkdataFieldNumber = 6;
  const ::game::Walk& walkdata() const;
  ::game::Walk* mutable_walkdata();
  ::game::Walk* release_walkdata();
  void set_allocated_walkdata(::game::Walk* walkdata);

  // .game.Jump jumpdata = 7;
  bool has_jumpdata() const;
  void clear_jumpdata();
  static const int kJumpdataFieldNumber = 7;
  const ::game::Jump& jumpdata() const;
  ::game::Jump* mutable_jumpdata();
  ::game::Jump* release_jumpdata();
  void set_allocated_jumpdata(::game::Jump* jumpdata);

  // int32 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // double x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  double x() const;
  void set_x(double value);

  // double y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  double y() const;
  void set_y(double value);

  // double z = 5;
  void clear_z();
  static const int kZFieldNumber = 5;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:game.ActionProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::game::Walk* walkdata_;
  ::game::Jump* jumpdata_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 type_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnitReqProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.UnitReqProto) */ {
 public:
  UnitReqProto();
  virtual ~UnitReqProto();

  UnitReqProto(const UnitReqProto& from);

  inline UnitReqProto& operator=(const UnitReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitReqProto& default_instance();

  static inline const UnitReqProto* internal_default_instance() {
    return reinterpret_cast<const UnitReqProto*>(
               &_UnitReqProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UnitReqProto* other);

  // implements Message ----------------------------------------------

  inline UnitReqProto* New() const PROTOBUF_FINAL { return New(NULL); }

  UnitReqProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnitReqProto& from);
  void MergeFrom(const UnitReqProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnitReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game.UnitReqProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameReqProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.GameReqProto) */ {
 public:
  GameReqProto();
  virtual ~GameReqProto();

  GameReqProto(const GameReqProto& from);

  inline GameReqProto& operator=(const GameReqProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameReqProto& default_instance();

  static inline const GameReqProto* internal_default_instance() {
    return reinterpret_cast<const GameReqProto*>(
               &_GameReqProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GameReqProto* other);

  // implements Message ----------------------------------------------

  inline GameReqProto* New() const PROTOBUF_FINAL { return New(NULL); }

  GameReqProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameReqProto& from);
  void MergeFrom(const GameReqProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameReqProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .game.UnitReqProto unitreq = 4;
  bool has_unitreq() const;
  void clear_unitreq();
  static const int kUnitreqFieldNumber = 4;
  const ::game::UnitReqProto& unitreq() const;
  ::game::UnitReqProto* mutable_unitreq();
  ::game::UnitReqProto* release_unitreq();
  void set_allocated_unitreq(::game::UnitReqProto* unitreq);

  // .game.ActionProto actionreq = 5;
  bool has_actionreq() const;
  void clear_actionreq();
  static const int kActionreqFieldNumber = 5;
  const ::game::ActionProto& actionreq() const;
  ::game::ActionProto* mutable_actionreq();
  ::game::ActionProto* release_actionreq();
  void set_allocated_actionreq(::game::ActionProto* actionreq);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 unitid = 2;
  void clear_unitid();
  static const int kUnitidFieldNumber = 2;
  ::google::protobuf::int32 unitid() const;
  void set_unitid(::google::protobuf::int32 value);

  // int32 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game.GameReqProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::game::UnitReqProto* unitreq_;
  ::game::ActionProto* actionreq_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 unitid_;
  ::google::protobuf::int32 playerid_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInfoProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.PlayerInfoProto) */ {
 public:
  PlayerInfoProto();
  virtual ~PlayerInfoProto();

  PlayerInfoProto(const PlayerInfoProto& from);

  inline PlayerInfoProto& operator=(const PlayerInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfoProto& default_instance();

  static inline const PlayerInfoProto* internal_default_instance() {
    return reinterpret_cast<const PlayerInfoProto*>(
               &_PlayerInfoProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlayerInfoProto* other);

  // implements Message ----------------------------------------------

  inline PlayerInfoProto* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInfoProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInfoProto& from);
  void MergeFrom(const PlayerInfoProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInfoProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game.PlayerInfoProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnitInfoProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.UnitInfoProto) */ {
 public:
  UnitInfoProto();
  virtual ~UnitInfoProto();

  UnitInfoProto(const UnitInfoProto& from);

  inline UnitInfoProto& operator=(const UnitInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitInfoProto& default_instance();

  static inline const UnitInfoProto* internal_default_instance() {
    return reinterpret_cast<const UnitInfoProto*>(
               &_UnitInfoProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(UnitInfoProto* other);

  // implements Message ----------------------------------------------

  inline UnitInfoProto* New() const PROTOBUF_FINAL { return New(NULL); }

  UnitInfoProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnitInfoProto& from);
  void MergeFrom(const UnitInfoProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnitInfoProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:game.UnitInfoProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameResProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:game.GameResProto) */ {
 public:
  GameResProto();
  virtual ~GameResProto();

  GameResProto(const GameResProto& from);

  inline GameResProto& operator=(const GameResProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameResProto& default_instance();

  static inline const GameResProto* internal_default_instance() {
    return reinterpret_cast<const GameResProto*>(
               &_GameResProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GameResProto* other);

  // implements Message ----------------------------------------------

  inline GameResProto* New() const PROTOBUF_FINAL { return New(NULL); }

  GameResProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameResProto& from);
  void MergeFrom(const GameResProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameResProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .game.ActionProto actions = 3;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 3;
  const ::game::ActionProto& actions(int index) const;
  ::game::ActionProto* mutable_actions(int index);
  ::game::ActionProto* add_actions();
  ::google::protobuf::RepeatedPtrField< ::game::ActionProto >*
      mutable_actions();
  const ::google::protobuf::RepeatedPtrField< ::game::ActionProto >&
      actions() const;

  // .game.UnitInfoProto unitinfo = 4;
  bool has_unitinfo() const;
  void clear_unitinfo();
  static const int kUnitinfoFieldNumber = 4;
  const ::game::UnitInfoProto& unitinfo() const;
  ::game::UnitInfoProto* mutable_unitinfo();
  ::game::UnitInfoProto* release_unitinfo();
  void set_allocated_unitinfo(::game::UnitInfoProto* unitinfo);

  // .game.PlayerInfoProto playerinfo = 5;
  bool has_playerinfo() const;
  void clear_playerinfo();
  static const int kPlayerinfoFieldNumber = 5;
  const ::game::PlayerInfoProto& playerinfo() const;
  ::game::PlayerInfoProto* mutable_playerinfo();
  ::game::PlayerInfoProto* release_playerinfo();
  void set_allocated_playerinfo(::game::PlayerInfoProto* playerinfo);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game.GameResProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::game::ActionProto > actions_;
  ::game::UnitInfoProto* unitinfo_;
  ::game::PlayerInfoProto* playerinfo_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_game_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Walk

// -------------------------------------------------------------------

// Jump

// -------------------------------------------------------------------

// ActionProto

// int32 playerid = 1;
inline void ActionProto::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 ActionProto::playerid() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.playerid)
  return playerid_;
}
inline void ActionProto::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:game.ActionProto.playerid)
}

// int32 type = 2;
inline void ActionProto::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ActionProto::type() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.type)
  return type_;
}
inline void ActionProto::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:game.ActionProto.type)
}

// double x = 3;
inline void ActionProto::clear_x() {
  x_ = 0;
}
inline double ActionProto::x() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.x)
  return x_;
}
inline void ActionProto::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:game.ActionProto.x)
}

// double y = 4;
inline void ActionProto::clear_y() {
  y_ = 0;
}
inline double ActionProto::y() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.y)
  return y_;
}
inline void ActionProto::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:game.ActionProto.y)
}

// double z = 5;
inline void ActionProto::clear_z() {
  z_ = 0;
}
inline double ActionProto::z() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.z)
  return z_;
}
inline void ActionProto::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:game.ActionProto.z)
}

// .game.Walk walkdata = 6;
inline bool ActionProto::has_walkdata() const {
  return this != internal_default_instance() && walkdata_ != NULL;
}
inline void ActionProto::clear_walkdata() {
  if (GetArenaNoVirtual() == NULL && walkdata_ != NULL) delete walkdata_;
  walkdata_ = NULL;
}
inline const ::game::Walk& ActionProto::walkdata() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.walkdata)
  return walkdata_ != NULL ? *walkdata_
                         : *::game::Walk::internal_default_instance();
}
inline ::game::Walk* ActionProto::mutable_walkdata() {
  
  if (walkdata_ == NULL) {
    walkdata_ = new ::game::Walk;
  }
  // @@protoc_insertion_point(field_mutable:game.ActionProto.walkdata)
  return walkdata_;
}
inline ::game::Walk* ActionProto::release_walkdata() {
  // @@protoc_insertion_point(field_release:game.ActionProto.walkdata)
  
  ::game::Walk* temp = walkdata_;
  walkdata_ = NULL;
  return temp;
}
inline void ActionProto::set_allocated_walkdata(::game::Walk* walkdata) {
  delete walkdata_;
  walkdata_ = walkdata;
  if (walkdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:game.ActionProto.walkdata)
}

// .game.Jump jumpdata = 7;
inline bool ActionProto::has_jumpdata() const {
  return this != internal_default_instance() && jumpdata_ != NULL;
}
inline void ActionProto::clear_jumpdata() {
  if (GetArenaNoVirtual() == NULL && jumpdata_ != NULL) delete jumpdata_;
  jumpdata_ = NULL;
}
inline const ::game::Jump& ActionProto::jumpdata() const {
  // @@protoc_insertion_point(field_get:game.ActionProto.jumpdata)
  return jumpdata_ != NULL ? *jumpdata_
                         : *::game::Jump::internal_default_instance();
}
inline ::game::Jump* ActionProto::mutable_jumpdata() {
  
  if (jumpdata_ == NULL) {
    jumpdata_ = new ::game::Jump;
  }
  // @@protoc_insertion_point(field_mutable:game.ActionProto.jumpdata)
  return jumpdata_;
}
inline ::game::Jump* ActionProto::release_jumpdata() {
  // @@protoc_insertion_point(field_release:game.ActionProto.jumpdata)
  
  ::game::Jump* temp = jumpdata_;
  jumpdata_ = NULL;
  return temp;
}
inline void ActionProto::set_allocated_jumpdata(::game::Jump* jumpdata) {
  delete jumpdata_;
  jumpdata_ = jumpdata;
  if (jumpdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:game.ActionProto.jumpdata)
}

// -------------------------------------------------------------------

// UnitReqProto

// int32 type = 1;
inline void UnitReqProto::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 UnitReqProto::type() const {
  // @@protoc_insertion_point(field_get:game.UnitReqProto.type)
  return type_;
}
inline void UnitReqProto::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:game.UnitReqProto.type)
}

// -------------------------------------------------------------------

// GameReqProto

// int32 type = 1;
inline void GameReqProto::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 GameReqProto::type() const {
  // @@protoc_insertion_point(field_get:game.GameReqProto.type)
  return type_;
}
inline void GameReqProto::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:game.GameReqProto.type)
}

// int32 unitid = 2;
inline void GameReqProto::clear_unitid() {
  unitid_ = 0;
}
inline ::google::protobuf::int32 GameReqProto::unitid() const {
  // @@protoc_insertion_point(field_get:game.GameReqProto.unitid)
  return unitid_;
}
inline void GameReqProto::set_unitid(::google::protobuf::int32 value) {
  
  unitid_ = value;
  // @@protoc_insertion_point(field_set:game.GameReqProto.unitid)
}

// int32 playerid = 3;
inline void GameReqProto::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 GameReqProto::playerid() const {
  // @@protoc_insertion_point(field_get:game.GameReqProto.playerid)
  return playerid_;
}
inline void GameReqProto::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:game.GameReqProto.playerid)
}

// .game.UnitReqProto unitreq = 4;
inline bool GameReqProto::has_unitreq() const {
  return this != internal_default_instance() && unitreq_ != NULL;
}
inline void GameReqProto::clear_unitreq() {
  if (GetArenaNoVirtual() == NULL && unitreq_ != NULL) delete unitreq_;
  unitreq_ = NULL;
}
inline const ::game::UnitReqProto& GameReqProto::unitreq() const {
  // @@protoc_insertion_point(field_get:game.GameReqProto.unitreq)
  return unitreq_ != NULL ? *unitreq_
                         : *::game::UnitReqProto::internal_default_instance();
}
inline ::game::UnitReqProto* GameReqProto::mutable_unitreq() {
  
  if (unitreq_ == NULL) {
    unitreq_ = new ::game::UnitReqProto;
  }
  // @@protoc_insertion_point(field_mutable:game.GameReqProto.unitreq)
  return unitreq_;
}
inline ::game::UnitReqProto* GameReqProto::release_unitreq() {
  // @@protoc_insertion_point(field_release:game.GameReqProto.unitreq)
  
  ::game::UnitReqProto* temp = unitreq_;
  unitreq_ = NULL;
  return temp;
}
inline void GameReqProto::set_allocated_unitreq(::game::UnitReqProto* unitreq) {
  delete unitreq_;
  unitreq_ = unitreq;
  if (unitreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameReqProto.unitreq)
}

// .game.ActionProto actionreq = 5;
inline bool GameReqProto::has_actionreq() const {
  return this != internal_default_instance() && actionreq_ != NULL;
}
inline void GameReqProto::clear_actionreq() {
  if (GetArenaNoVirtual() == NULL && actionreq_ != NULL) delete actionreq_;
  actionreq_ = NULL;
}
inline const ::game::ActionProto& GameReqProto::actionreq() const {
  // @@protoc_insertion_point(field_get:game.GameReqProto.actionreq)
  return actionreq_ != NULL ? *actionreq_
                         : *::game::ActionProto::internal_default_instance();
}
inline ::game::ActionProto* GameReqProto::mutable_actionreq() {
  
  if (actionreq_ == NULL) {
    actionreq_ = new ::game::ActionProto;
  }
  // @@protoc_insertion_point(field_mutable:game.GameReqProto.actionreq)
  return actionreq_;
}
inline ::game::ActionProto* GameReqProto::release_actionreq() {
  // @@protoc_insertion_point(field_release:game.GameReqProto.actionreq)
  
  ::game::ActionProto* temp = actionreq_;
  actionreq_ = NULL;
  return temp;
}
inline void GameReqProto::set_allocated_actionreq(::game::ActionProto* actionreq) {
  delete actionreq_;
  actionreq_ = actionreq;
  if (actionreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameReqProto.actionreq)
}

// -------------------------------------------------------------------

// PlayerInfoProto

// int32 playerid = 1;
inline void PlayerInfoProto::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PlayerInfoProto::playerid() const {
  // @@protoc_insertion_point(field_get:game.PlayerInfoProto.playerid)
  return playerid_;
}
inline void PlayerInfoProto::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:game.PlayerInfoProto.playerid)
}

// -------------------------------------------------------------------

// UnitInfoProto

// -------------------------------------------------------------------

// GameResProto

// int32 type = 1;
inline void GameResProto::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 GameResProto::type() const {
  // @@protoc_insertion_point(field_get:game.GameResProto.type)
  return type_;
}
inline void GameResProto::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:game.GameResProto.type)
}

// int32 code = 2;
inline void GameResProto::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 GameResProto::code() const {
  // @@protoc_insertion_point(field_get:game.GameResProto.code)
  return code_;
}
inline void GameResProto::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:game.GameResProto.code)
}

// repeated .game.ActionProto actions = 3;
inline int GameResProto::actions_size() const {
  return actions_.size();
}
inline void GameResProto::clear_actions() {
  actions_.Clear();
}
inline const ::game::ActionProto& GameResProto::actions(int index) const {
  // @@protoc_insertion_point(field_get:game.GameResProto.actions)
  return actions_.Get(index);
}
inline ::game::ActionProto* GameResProto::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:game.GameResProto.actions)
  return actions_.Mutable(index);
}
inline ::game::ActionProto* GameResProto::add_actions() {
  // @@protoc_insertion_point(field_add:game.GameResProto.actions)
  return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::game::ActionProto >*
GameResProto::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:game.GameResProto.actions)
  return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::game::ActionProto >&
GameResProto::actions() const {
  // @@protoc_insertion_point(field_list:game.GameResProto.actions)
  return actions_;
}

// .game.UnitInfoProto unitinfo = 4;
inline bool GameResProto::has_unitinfo() const {
  return this != internal_default_instance() && unitinfo_ != NULL;
}
inline void GameResProto::clear_unitinfo() {
  if (GetArenaNoVirtual() == NULL && unitinfo_ != NULL) delete unitinfo_;
  unitinfo_ = NULL;
}
inline const ::game::UnitInfoProto& GameResProto::unitinfo() const {
  // @@protoc_insertion_point(field_get:game.GameResProto.unitinfo)
  return unitinfo_ != NULL ? *unitinfo_
                         : *::game::UnitInfoProto::internal_default_instance();
}
inline ::game::UnitInfoProto* GameResProto::mutable_unitinfo() {
  
  if (unitinfo_ == NULL) {
    unitinfo_ = new ::game::UnitInfoProto;
  }
  // @@protoc_insertion_point(field_mutable:game.GameResProto.unitinfo)
  return unitinfo_;
}
inline ::game::UnitInfoProto* GameResProto::release_unitinfo() {
  // @@protoc_insertion_point(field_release:game.GameResProto.unitinfo)
  
  ::game::UnitInfoProto* temp = unitinfo_;
  unitinfo_ = NULL;
  return temp;
}
inline void GameResProto::set_allocated_unitinfo(::game::UnitInfoProto* unitinfo) {
  delete unitinfo_;
  unitinfo_ = unitinfo;
  if (unitinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameResProto.unitinfo)
}

// .game.PlayerInfoProto playerinfo = 5;
inline bool GameResProto::has_playerinfo() const {
  return this != internal_default_instance() && playerinfo_ != NULL;
}
inline void GameResProto::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
inline const ::game::PlayerInfoProto& GameResProto::playerinfo() const {
  // @@protoc_insertion_point(field_get:game.GameResProto.playerinfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::game::PlayerInfoProto::internal_default_instance();
}
inline ::game::PlayerInfoProto* GameResProto::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::game::PlayerInfoProto;
  }
  // @@protoc_insertion_point(field_mutable:game.GameResProto.playerinfo)
  return playerinfo_;
}
inline ::game::PlayerInfoProto* GameResProto::release_playerinfo() {
  // @@protoc_insertion_point(field_release:game.GameResProto.playerinfo)
  
  ::game::PlayerInfoProto* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void GameResProto::set_allocated_playerinfo(::game::PlayerInfoProto* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:game.GameResProto.playerinfo)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace game

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
